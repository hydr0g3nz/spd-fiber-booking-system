basePath: /api
definitions:
  dto.CreateBookingRequest:
    description: Request payload for creating a new booking
    properties:
      price:
        example: 30000
        type: number
      service_id:
        example: 456
        type: integer
      user_id:
        example: 123
        type: integer
    required:
    - price
    - service_id
    - user_id
    type: object
  models.Booking:
    description: Booking entity representing a customer's service booking
    properties:
      created_at:
        example: "2024-03-11T12:00:00Z"
        format: date-time
        type: string
      id:
        example: 1
        type: integer
      price:
        example: 30000
        type: number
      service_id:
        example: 456
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/models.BookingStatus'
        enum:
        - pending
        - confirmed
        - rejected
        - canceled
        example: pending
      updated_at:
        example: "2024-03-11T12:00:00Z"
        format: date-time
        type: string
      user_id:
        example: 123
        type: integer
    type: object
  models.BookingStatus:
    enum:
    - pending
    - confirmed
    - rejected
    - canceled
    type: string
    x-enum-varnames:
    - BookingStatusPending
    - BookingStatusConfirmed
    - BookingStatusRejected
    - BookingStatusCanceled
host: localhost:3000
info:
  contact:
    email: support@example.com
    name: API Support
  description: A booking system API built with Fiber framework
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Fiber Booking System API
  version: "1.0"
paths:
  /bookings:
    get:
      consumes:
      - application/json
      description: Get all bookings with optional sorting and filtering
      parameters:
      - description: Sort by (price or date)
        in: query
        name: sort
        type: string
      - description: Filter high-value bookings (price > 50,000)
        in: query
        name: high-value
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all bookings
      tags:
      - bookings
    post:
      consumes:
      - application/json
      description: Create a new booking with the given details
      parameters:
      - description: Booking Information
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBookingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new booking
      tags:
      - bookings
  /bookings/{id}:
    delete:
      consumes:
      - application/json
      description: Cancel a booking by its ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Invalid request or cannot cancel
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Booking not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cancel a booking
      tags:
      - bookings
    get:
      consumes:
      - application/json
      description: Get a booking's details by its ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Invalid ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Booking not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a booking by ID
      tags:
      - bookings
swagger: "2.0"
